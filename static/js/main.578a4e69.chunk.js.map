{"version":3,"sources":["components/TodoForm.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["TodoForm","props","_useState","useState","edit","value","_useState2","Object","slicedToArray","input","setInput","inputRef","useRef","useEffect","current","focus","handleChange","e","target","handleSubmit","preventDefault","onSubmit","id","Math","floor","random","text","react_default","a","createElement","className","Fragment","placeholder","onChange","name","ref","onClick","Todo","_ref","todos","completeTodo","removeTodo","updateTodo","setEdit","components_TodoForm","map","todo","index","isComplete","key","description","index_esm","ti_index_esm","TodoList","setTodos","_useState3","_useState4","setError","axios","get","then","res","data","catch","error","message","test","newTodos","concat","toConsumableArray","components_Todo","updatedTodos","removedArr","filter","todoId","newValue","prev","item","App","components_TodoList","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.578a4e69.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\n\r\nfunction TodoForm(props) {\r\n  const [input, setInput] = useState(props.edit ? props.edit.value : '');\r\n\r\n  const inputRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    inputRef.current.focus();\r\n  });\r\n\r\n  const handleChange = e => {\r\n    setInput(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    props.onSubmit({\r\n      id: Math.floor(Math.random() * 10000),\r\n      text: input\r\n    });\r\n    setInput('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className='todo-form'>\r\n      {props.edit ? (\r\n        <>\r\n          <input\r\n            placeholder='Update your item'\r\n            value={input}\r\n            onChange={handleChange}\r\n            name='text'\r\n            ref={inputRef}\r\n            className='todo-input edit'\r\n          />\r\n          <button onClick={handleSubmit} className='todo-button edit'>\r\n            Update\r\n          </button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <input\r\n            placeholder='Add a todo'\r\n            value={input}\r\n            onChange={handleChange}\r\n            name='text'\r\n            className='todo-input'\r\n            ref={inputRef}\r\n          />\r\n          <button onClick={handleSubmit} className='todo-button'>\r\n            Add todo\r\n          </button>\r\n        </>\r\n      )}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default TodoForm;","import React, {useState} from 'react';\r\nimport TodoForm from './TodoForm';\r\nimport {RiCloseCircleLine} from 'react-icons/ri'\r\nimport {TiEdit} from 'react-icons/ti'\r\n\r\n\r\nfunction Todo({todos, completeTodo, removeTodo, updateTodo}) {\r\n    const [edit, setEdit] = useState({\r\n        id: null,\r\n        value: ''\r\n    });\r\n\r\n    const submitUpdate = value => {\r\n        updateTodo(edit.id, value)\r\n        setEdit({\r\n            id: null,\r\n            value: ''\r\n        });\r\n    };\r\n\r\n    if (edit.id) {\r\n        return <TodoForm edit={edit} onSubmit={submitUpdate} />;\r\n    }\r\n\r\n  return todos.map((todo, index) => (\r\n    <div className={todo.isComplete ? 'todo-row complete' : 'todo-row'} key={index}>\r\n        <div key={todo.id} onClick={() => completeTodo(todo.id)}>{todo.text}\r\n            {todo.description}\r\n        </div>\r\n        <div className='icons'>\r\n            <RiCloseCircleLine \r\n            onClick={() => removeTodo(todo.id)}\r\n            className='delete-icon'\r\n            />\r\n            <TiEdit\r\n            onClick={() => setEdit({ id: todo.id, value: todo.text})}\r\n            className='edit-icon'\r\n            />\r\n        </div>\r\n    </div>\r\n  )) ;\r\n}\r\n\r\nexport default Todo\r\n","import React, { useState, useEffect } from 'react';\r\nimport TodoForm from './TodoForm';\r\nimport Todo from './Todo';\r\nimport axios from 'axios';\r\n\r\nfunction TodoList() {\r\n  const [todos, setTodos] = useState([]);\r\n  const [error, setError] = useState (null);\r\n \r\n  const addTodo = todo => {\r\n   if (!todo.text || /^\\s*$/.test(todo.text)) {\r\n       return;\r\n     }\r\n\r\n     const newTodos = [todo, ...todos];\r\n\r\n     setTodos(newTodos);\r\n   };\r\n\r\n  const getTodos = () => {\r\n    axios.get(\"https://my-json-server.typicode.com/Alexmaingi/app-todo/todos\")\r\n    .then(res => setTodos(res.data))\r\n    .catch(error => setError(error.message))\r\n  };\r\n\r\n  useEffect(() => {\r\n    getTodos();\r\n  },[]);\r\n\r\n\r\n   const updateTodo = (todoId, newValue) => {\r\n     if (!newValue.text || /^\\s*$/.test(newValue.text)) {\r\n       return;\r\n     }\r\n\r\n     setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)));\r\n   };\r\n\r\n   const removeTodo = id => {\r\n     const removedArr = [...todos].filter(todo => todo.id !== id);\r\n\r\n     setTodos(removedArr);\r\n   };\r\n\r\n  \r\n\r\n   const completeTodo = id => {\r\n     let updatedTodos = todos.map(todo => {\r\n       if (todo.id === id) {\r\n         todo.isComplete = !todo.isComplete;\r\n       }\r\n       return todo;\r\n     });\r\n     setTodos(updatedTodos);\r\n   };\r\n\r\n  return (\r\n    <>\r\n      <h1>My Todays Plan.</h1>\r\n       <TodoForm onSubmit={addTodo} />\r\n      <Todo\r\n        todos={todos}\r\n        completeTodo={completeTodo}\r\n        removeTodo={removeTodo}\r\n        updateTodo={updateTodo}\r\n      /> \r\n    </>\r\n  );\r\n  \r\n  }\r\n\r\nexport default TodoList;","import React,{useEffect} from 'react';\nimport './App.css';\nimport TodoList from './components/TodoList';\n\nfunction App() {\n  return (\n    <div className='todo-app'>\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}